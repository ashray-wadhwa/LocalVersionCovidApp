In server.js    /www for me
    //Serve static assets if in production
    // if(process.env.NODE_ENV==='production'){
    //   //set static folder
    //   app.use(express.static('../../client/build'));
    //   app.get('*', (req, res) =>{
    //     res.sendFile(path.resolve(__dirname, 'Frontend', 'build', 'index.html'));
    //   });
    //}

    // const dbRoute =
    //     'mongodb+srv://dbUser:malloo4301@myCluster-puppf.mongodb.net/donationInfo?retryWrites=true&w=majority';//*
    // mongoose.connect(dbRoute,{ useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false})
    //     .then(() => console.log("Database Connected Successfully"))
    //     .catch(err => console.log(err));
    // let db = mongoose.connection;//*
    // db.once('open', () => console.log('connected to the database'));//*

    // // checks if connection with the database is successful
    // db.on('error', console.error.bind(console, 'MongoDB connection error:'));//*


In server's package.json
    // "build": "cd Frontend && npm run build",
    // "install-client": "cd Frontend && npm install",
    // "heroku-postbuild":"NPM_CONFIG_PRODUCTION=false npm run install-client && npm run build "


In backend's package.json
    "build": "cd .. && cd Frontend && npm run build",
    "install-client": "cd .. && cd Frontend && npm install",
    "start": "node ./bin/www",
    "heroku-postbuild":"npm run install-client && npm run build "



// "build": "cd .. && cd Frontend && npm run build",
    // "install-client": "cd .. && cd Frontend && npm install",


REMOVE PROXY


IN MONGODB.connect
process.env.MONGODB_URI ||